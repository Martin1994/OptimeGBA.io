// Generated by ClangSharp
// ClangSharpPInvokeGenerator --libraryPath=openh264 --file codec/api/svc/codec_api.h --namespace OptimeGBAServer.Media.LibOpenH264.Native --methodClassName openh264 --language c++ --config latest-codegen --output codec_api.cs

using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace OptimeGBAServer.Media.LibOpenH264.Native
{
    public unsafe partial struct ISVCEncoder
    {
        public void** lpVtbl;

        public int Initialize([NativeTypeName("const SEncParamBase *")] TagEncParamBase* pParam)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCEncoder*, TagEncParamBase*, int>)(lpVtbl[0]))((ISVCEncoder*)Unsafe.AsPointer(ref this), pParam);
        }

        public int InitializeExt([NativeTypeName("const SEncParamExt *")] TagEncParamExt* pParam)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCEncoder*, TagEncParamExt*, int>)(lpVtbl[1]))((ISVCEncoder*)Unsafe.AsPointer(ref this), pParam);
        }

        public int GetDefaultParams([NativeTypeName("SEncParamExt *")] TagEncParamExt* pParam)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCEncoder*, TagEncParamExt*, int>)(lpVtbl[2]))((ISVCEncoder*)Unsafe.AsPointer(ref this), pParam);
        }

        public int Uninitialize()
        {
            return ((delegate* unmanaged[Cdecl]<ISVCEncoder*, int>)(lpVtbl[3]))((ISVCEncoder*)Unsafe.AsPointer(ref this));
        }

        public int EncodeFrame([NativeTypeName("const SSourcePicture *")] SSourcePicture* kpSrcPic, SFrameBSInfo* pBsInfo)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCEncoder*, SSourcePicture*, SFrameBSInfo*, int>)(lpVtbl[4]))((ISVCEncoder*)Unsafe.AsPointer(ref this), kpSrcPic, pBsInfo);
        }

        public int EncodeParameterSets(SFrameBSInfo* pBsInfo)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCEncoder*, SFrameBSInfo*, int>)(lpVtbl[5]))((ISVCEncoder*)Unsafe.AsPointer(ref this), pBsInfo);
        }

        public int ForceIntraFrame([NativeTypeName("bool")] byte bIDR, int iLayerId = -1)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCEncoder*, byte, int, int>)(lpVtbl[6]))((ISVCEncoder*)Unsafe.AsPointer(ref this), bIDR, iLayerId);
        }

        public int SetOption(ENCODER_OPTION eOptionId, void* pOption)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCEncoder*, ENCODER_OPTION, void*, int>)(lpVtbl[7]))((ISVCEncoder*)Unsafe.AsPointer(ref this), eOptionId, pOption);
        }

        public int GetOption(ENCODER_OPTION eOptionId, void* pOption)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCEncoder*, ENCODER_OPTION, void*, int>)(lpVtbl[8]))((ISVCEncoder*)Unsafe.AsPointer(ref this), eOptionId, pOption);
        }

        public void Dispose()
        {
            ((delegate* unmanaged[Thiscall]<ISVCEncoder*, void>)(lpVtbl[9]))((ISVCEncoder*)Unsafe.AsPointer(ref this));
        }
    }

    public unsafe partial struct ISVCDecoder
    {
        public void** lpVtbl;

        [return: NativeTypeName("long")]
        public int Initialize([NativeTypeName("const SDecodingParam *")] TagSVCDecodingParam* pParam)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCDecoder*, TagSVCDecodingParam*, int>)(lpVtbl[0]))((ISVCDecoder*)Unsafe.AsPointer(ref this), pParam);
        }

        [return: NativeTypeName("long")]
        public int Uninitialize()
        {
            return ((delegate* unmanaged[Cdecl]<ISVCDecoder*, int>)(lpVtbl[1]))((ISVCDecoder*)Unsafe.AsPointer(ref this));
        }

        public DECODING_STATE DecodeFrame([NativeTypeName("const unsigned char *")] byte* pSrc, [NativeTypeName("const int")] int iSrcLen, [NativeTypeName("unsigned char **")] byte** ppDst, int* pStride, [NativeTypeName("int &")] int* iWidth, [NativeTypeName("int &")] int* iHeight)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCDecoder*, byte*, int, byte**, int*, int*, int*, DECODING_STATE>)(lpVtbl[2]))((ISVCDecoder*)Unsafe.AsPointer(ref this), pSrc, iSrcLen, ppDst, pStride, iWidth, iHeight);
        }

        public DECODING_STATE DecodeFrameNoDelay([NativeTypeName("const unsigned char *")] byte* pSrc, [NativeTypeName("const int")] int iSrcLen, [NativeTypeName("unsigned char **")] byte** ppDst, [NativeTypeName("SBufferInfo *")] TagBufferInfo* pDstInfo)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCDecoder*, byte*, int, byte**, TagBufferInfo*, DECODING_STATE>)(lpVtbl[3]))((ISVCDecoder*)Unsafe.AsPointer(ref this), pSrc, iSrcLen, ppDst, pDstInfo);
        }

        public DECODING_STATE DecodeFrame2([NativeTypeName("const unsigned char *")] byte* pSrc, [NativeTypeName("const int")] int iSrcLen, [NativeTypeName("unsigned char **")] byte** ppDst, [NativeTypeName("SBufferInfo *")] TagBufferInfo* pDstInfo)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCDecoder*, byte*, int, byte**, TagBufferInfo*, DECODING_STATE>)(lpVtbl[4]))((ISVCDecoder*)Unsafe.AsPointer(ref this), pSrc, iSrcLen, ppDst, pDstInfo);
        }

        public DECODING_STATE FlushFrame([NativeTypeName("unsigned char **")] byte** ppDst, [NativeTypeName("SBufferInfo *")] TagBufferInfo* pDstInfo)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCDecoder*, byte**, TagBufferInfo*, DECODING_STATE>)(lpVtbl[5]))((ISVCDecoder*)Unsafe.AsPointer(ref this), ppDst, pDstInfo);
        }

        public DECODING_STATE DecodeParser([NativeTypeName("const unsigned char *")] byte* pSrc, [NativeTypeName("const int")] int iSrcLen, [NativeTypeName("SParserBsInfo *")] TagParserBsInfo* pDstInfo)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCDecoder*, byte*, int, TagParserBsInfo*, DECODING_STATE>)(lpVtbl[6]))((ISVCDecoder*)Unsafe.AsPointer(ref this), pSrc, iSrcLen, pDstInfo);
        }

        public DECODING_STATE DecodeFrameEx([NativeTypeName("const unsigned char *")] byte* pSrc, [NativeTypeName("const int")] int iSrcLen, [NativeTypeName("unsigned char *")] byte* pDst, int iDstStride, [NativeTypeName("int &")] int* iDstLen, [NativeTypeName("int &")] int* iWidth, [NativeTypeName("int &")] int* iHeight, [NativeTypeName("int &")] int* iColorFormat)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCDecoder*, byte*, int, byte*, int, int*, int*, int*, int*, DECODING_STATE>)(lpVtbl[7]))((ISVCDecoder*)Unsafe.AsPointer(ref this), pSrc, iSrcLen, pDst, iDstStride, iDstLen, iWidth, iHeight, iColorFormat);
        }

        [return: NativeTypeName("long")]
        public int SetOption(DECODER_OPTION eOptionId, void* pOption)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCDecoder*, DECODER_OPTION, void*, int>)(lpVtbl[8]))((ISVCDecoder*)Unsafe.AsPointer(ref this), eOptionId, pOption);
        }

        [return: NativeTypeName("long")]
        public int GetOption(DECODER_OPTION eOptionId, void* pOption)
        {
            return ((delegate* unmanaged[Cdecl]<ISVCDecoder*, DECODER_OPTION, void*, int>)(lpVtbl[9]))((ISVCDecoder*)Unsafe.AsPointer(ref this), eOptionId, pOption);
        }

        public void Dispose()
        {
            ((delegate* unmanaged[Thiscall]<ISVCDecoder*, void>)(lpVtbl[10]))((ISVCDecoder*)Unsafe.AsPointer(ref this));
        }
    }

    public static unsafe partial class openh264
    {
        [DllImport("openh264", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int WelsCreateSVCEncoder(ISVCEncoder** ppEncoder);

        [DllImport("openh264", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void WelsDestroySVCEncoder(ISVCEncoder* pEncoder);

        [DllImport("openh264", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern int WelsGetDecoderCapability([NativeTypeName("SDecoderCapability *")] TagDecoderCapability* pDecCapability);

        [DllImport("openh264", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: NativeTypeName("long")]
        public static extern int WelsCreateDecoder(ISVCDecoder** ppDecoder);

        [DllImport("openh264", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void WelsDestroyDecoder(ISVCDecoder* pDecoder);

        [DllImport("openh264", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: NativeTypeName("OpenH264Version")]
        public static extern _tagVersion WelsGetCodecVersion();

        [DllImport("openh264", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void WelsGetCodecVersionEx([NativeTypeName("OpenH264Version *")] _tagVersion* pVersion);
    }
}
