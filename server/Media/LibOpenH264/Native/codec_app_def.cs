// Generated by ClangSharp
// ClangSharpPInvokeGenerator --libraryPath=openh264 --file codec/api/svc/codec_app_def.h --namespace OptimeGBAServer.Media.LibOpenH264.Native --methodClassName openh264 --language c++ --config latest-codegen --output codec_app_def.cs

using System;
using System.Runtime.InteropServices;

namespace OptimeGBAServer.Media.LibOpenH264.Native
{
    public partial struct _tagVersion
    {
        [NativeTypeName("unsigned int")]
        public uint uMajor;

        [NativeTypeName("unsigned int")]
        public uint uMinor;

        [NativeTypeName("unsigned int")]
        public uint uRevision;

        [NativeTypeName("unsigned int")]
        public uint uReserved;
    }

    public enum DECODING_STATE
    {
        dsErrorFree = 0x00,
        dsFramePending = 0x01,
        dsRefLost = 0x02,
        dsBitstreamError = 0x04,
        dsDepLayerLost = 0x08,
        dsNoParamSets = 0x10,
        dsDataErrorConcealed = 0x20,
        dsRefListNullPtrs = 0x40,
        dsInvalidArgument = 0x1000,
        dsInitialOptExpected = 0x2000,
        dsOutOfMemory = 0x4000,
        dsDstBufNeedExpan = 0x8000,
    }

    public enum ENCODER_OPTION
    {
        ENCODER_OPTION_DATAFORMAT = 0,
        ENCODER_OPTION_IDR_INTERVAL,
        ENCODER_OPTION_SVC_ENCODE_PARAM_BASE,
        ENCODER_OPTION_SVC_ENCODE_PARAM_EXT,
        ENCODER_OPTION_FRAME_RATE,
        ENCODER_OPTION_BITRATE,
        ENCODER_OPTION_MAX_BITRATE,
        ENCODER_OPTION_INTER_SPATIAL_PRED,
        ENCODER_OPTION_RC_MODE,
        ENCODER_OPTION_RC_FRAME_SKIP,
        ENCODER_PADDING_PADDING,
        ENCODER_OPTION_PROFILE,
        ENCODER_OPTION_LEVEL,
        ENCODER_OPTION_NUMBER_REF,
        ENCODER_OPTION_DELIVERY_STATUS,
        ENCODER_LTR_RECOVERY_REQUEST,
        ENCODER_LTR_MARKING_FEEDBACK,
        ENCODER_LTR_MARKING_PERIOD,
        ENCODER_OPTION_LTR,
        ENCODER_OPTION_COMPLEXITY,
        ENCODER_OPTION_ENABLE_SSEI,
        ENCODER_OPTION_ENABLE_PREFIX_NAL_ADDING,
        ENCODER_OPTION_SPS_PPS_ID_STRATEGY,
        ENCODER_OPTION_CURRENT_PATH,
        ENCODER_OPTION_DUMP_FILE,
        ENCODER_OPTION_TRACE_LEVEL,
        ENCODER_OPTION_TRACE_CALLBACK,
        ENCODER_OPTION_TRACE_CALLBACK_CONTEXT,
        ENCODER_OPTION_GET_STATISTICS,
        ENCODER_OPTION_STATISTICS_LOG_INTERVAL,
        ENCODER_OPTION_IS_LOSSLESS_LINK,
        ENCODER_OPTION_BITS_VARY_PERCENTAGE,
    }

    public enum DECODER_OPTION
    {
        DECODER_OPTION_END_OF_STREAM = 1,
        DECODER_OPTION_VCL_NAL,
        DECODER_OPTION_TEMPORAL_ID,
        DECODER_OPTION_FRAME_NUM,
        DECODER_OPTION_IDR_PIC_ID,
        DECODER_OPTION_LTR_MARKING_FLAG,
        DECODER_OPTION_LTR_MARKED_FRAME_NUM,
        DECODER_OPTION_ERROR_CON_IDC,
        DECODER_OPTION_TRACE_LEVEL,
        DECODER_OPTION_TRACE_CALLBACK,
        DECODER_OPTION_TRACE_CALLBACK_CONTEXT,
        DECODER_OPTION_GET_STATISTICS,
        DECODER_OPTION_GET_SAR_INFO,
        DECODER_OPTION_PROFILE,
        DECODER_OPTION_LEVEL,
        DECODER_OPTION_STATISTICS_LOG_INTERVAL,
        DECODER_OPTION_IS_REF_PIC,
        DECODER_OPTION_NUM_OF_FRAMES_REMAINING_IN_BUFFER,
        DECODER_OPTION_NUM_OF_THREADS,
    }

    public enum ERROR_CON_IDC
    {
        ERROR_CON_DISABLE = 0,
        ERROR_CON_FRAME_COPY,
        ERROR_CON_SLICE_COPY,
        ERROR_CON_FRAME_COPY_CROSS_IDR,
        ERROR_CON_SLICE_COPY_CROSS_IDR,
        ERROR_CON_SLICE_COPY_CROSS_IDR_FREEZE_RES_CHANGE,
        ERROR_CON_SLICE_MV_COPY_CROSS_IDR,
        ERROR_CON_SLICE_MV_COPY_CROSS_IDR_FREEZE_RES_CHANGE,
    }

    public enum FEEDBACK_VCL_NAL_IN_AU
    {
        FEEDBACK_NON_VCL_NAL = 0,
        FEEDBACK_VCL_NAL,
        FEEDBACK_UNKNOWN_NAL,
    }

    public enum LAYER_TYPE
    {
        NON_VIDEO_CODING_LAYER = 0,
        VIDEO_CODING_LAYER = 1,
    }

    public enum LAYER_NUM
    {
        SPATIAL_LAYER_0 = 0,
        SPATIAL_LAYER_1 = 1,
        SPATIAL_LAYER_2 = 2,
        SPATIAL_LAYER_3 = 3,
        SPATIAL_LAYER_ALL = 4,
    }

    public enum VIDEO_BITSTREAM_TYPE
    {
        VIDEO_BITSTREAM_AVC = 0,
        VIDEO_BITSTREAM_SVC = 1,
        VIDEO_BITSTREAM_DEFAULT = VIDEO_BITSTREAM_SVC,
    }

    public enum KEY_FRAME_REQUEST_TYPE
    {
        NO_RECOVERY_REQUSET = 0,
        LTR_RECOVERY_REQUEST = 1,
        IDR_RECOVERY_REQUEST = 2,
        NO_LTR_MARKING_FEEDBACK = 3,
        LTR_MARKING_SUCCESS = 4,
        LTR_MARKING_FAILED = 5,
    }

    public partial struct SLTRRecoverRequest
    {
        [NativeTypeName("unsigned int")]
        public uint uiFeedbackType;

        [NativeTypeName("unsigned int")]
        public uint uiIDRPicId;

        public int iLastCorrectFrameNum;

        public int iCurrentFrameNum;

        public int iLayerId;
    }

    public partial struct SLTRMarkingFeedback
    {
        [NativeTypeName("unsigned int")]
        public uint uiFeedbackType;

        [NativeTypeName("unsigned int")]
        public uint uiIDRPicId;

        public int iLTRFrameNum;

        public int iLayerId;
    }

    public partial struct SLTRConfig
    {
        public bool bEnableLongTermReference;

        public int iLTRRefNum;
    }

    public enum RC_MODES
    {
        RC_QUALITY_MODE = 0,
        RC_BITRATE_MODE = 1,
        RC_BUFFERBASED_MODE = 2,
        RC_TIMESTAMP_MODE = 3,
        RC_BITRATE_MODE_POST_SKIP = 4,
        RC_OFF_MODE = -1,
    }

    public enum EProfileIdc
    {
        PRO_UNKNOWN = 0,
        PRO_BASELINE = 66,
        PRO_MAIN = 77,
        PRO_EXTENDED = 88,
        PRO_HIGH = 100,
        PRO_HIGH10 = 110,
        PRO_HIGH422 = 122,
        PRO_HIGH444 = 144,
        PRO_CAVLC444 = 244,
        PRO_SCALABLE_BASELINE = 83,
        PRO_SCALABLE_HIGH = 86,
    }

    public enum ELevelIdc
    {
        LEVEL_UNKNOWN = 0,
        LEVEL_1_0 = 10,
        LEVEL_1_B = 9,
        LEVEL_1_1 = 11,
        LEVEL_1_2 = 12,
        LEVEL_1_3 = 13,
        LEVEL_2_0 = 20,
        LEVEL_2_1 = 21,
        LEVEL_2_2 = 22,
        LEVEL_3_0 = 30,
        LEVEL_3_1 = 31,
        LEVEL_3_2 = 32,
        LEVEL_4_0 = 40,
        LEVEL_4_1 = 41,
        LEVEL_4_2 = 42,
        LEVEL_5_0 = 50,
        LEVEL_5_1 = 51,
        LEVEL_5_2 = 52,
    }

    public enum WelsLogEnum
    {
        WELS_LOG_QUIET = 0x00,
        WELS_LOG_ERROR = 1 << 0,
        WELS_LOG_WARNING = 1 << 1,
        WELS_LOG_INFO = 1 << 2,
        WELS_LOG_DEBUG = 1 << 3,
        WELS_LOG_DETAIL = 1 << 4,
        WELS_LOG_RESV = 1 << 5,
        WELS_LOG_LEVEL_COUNT = 6,
        WELS_LOG_DEFAULT = WELS_LOG_WARNING,
    }

    public enum SliceModeEnum
    {
        SM_SINGLE_SLICE = 0,
        SM_FIXEDSLCNUM_SLICE = 1,
        SM_RASTER_SLICE = 2,
        SM_SIZELIMITED_SLICE = 3,
        SM_RESERVED = 4,
    }

    public unsafe partial struct SSliceArgument
    {
        public SliceModeEnum uiSliceMode;

        [NativeTypeName("unsigned int")]
        public uint uiSliceNum;

        [NativeTypeName("unsigned int [35]")]
        public fixed uint uiSliceMbNum[35];

        [NativeTypeName("unsigned int")]
        public uint uiSliceSizeConstraint;
    }

    public enum EVideoFormatSPS
    {
        VF_COMPONENT,
        VF_PAL,
        VF_NTSC,
        VF_SECAM,
        VF_MAC,
        VF_UNDEF,
        VF_NUM_ENUM,
    }

    public enum EColorPrimaries
    {
        CP_RESERVED0,
        CP_BT709,
        CP_UNDEF,
        CP_RESERVED3,
        CP_BT470M,
        CP_BT470BG,
        CP_SMPTE170M,
        CP_SMPTE240M,
        CP_FILM,
        CP_BT2020,
        CP_NUM_ENUM,
    }

    public enum ETransferCharacteristics
    {
        TRC_RESERVED0,
        TRC_BT709,
        TRC_UNDEF,
        TRC_RESERVED3,
        TRC_BT470M,
        TRC_BT470BG,
        TRC_SMPTE170M,
        TRC_SMPTE240M,
        TRC_LINEAR,
        TRC_LOG100,
        TRC_LOG316,
        TRC_IEC61966_2_4,
        TRC_BT1361E,
        TRC_IEC61966_2_1,
        TRC_BT2020_10,
        TRC_BT2020_12,
        TRC_NUM_ENUM,
    }

    public enum EColorMatrix
    {
        CM_GBR,
        CM_BT709,
        CM_UNDEF,
        CM_RESERVED3,
        CM_FCC,
        CM_BT470BG,
        CM_SMPTE170M,
        CM_SMPTE240M,
        CM_YCGCO,
        CM_BT2020NC,
        CM_BT2020C,
        CM_NUM_ENUM,
    }

    public enum ESampleAspectRatio
    {
        ASP_UNSPECIFIED = 0,
        ASP_1x1 = 1,
        ASP_12x11 = 2,
        ASP_10x11 = 3,
        ASP_16x11 = 4,
        ASP_40x33 = 5,
        ASP_24x11 = 6,
        ASP_20x11 = 7,
        ASP_32x11 = 8,
        ASP_80x33 = 9,
        ASP_18x11 = 10,
        ASP_15x11 = 11,
        ASP_64x33 = 12,
        ASP_160x99 = 13,
        ASP_EXT_SAR = 255,
    }

    public partial struct SSpatialLayerConfig
    {
        public int iVideoWidth;

        public int iVideoHeight;

        public float fFrameRate;

        public int iSpatialBitrate;

        public int iMaxSpatialBitrate;

        public EProfileIdc uiProfileIdc;

        public ELevelIdc uiLevelIdc;

        public int iDLayerQp;

        public SSliceArgument sSliceArgument;

        public bool bVideoSignalTypePresent;

        [NativeTypeName("unsigned char")]
        public byte uiVideoFormat;

        public bool bFullRange;

        public bool bColorDescriptionPresent;

        [NativeTypeName("unsigned char")]
        public byte uiColorPrimaries;

        [NativeTypeName("unsigned char")]
        public byte uiTransferCharacteristics;

        [NativeTypeName("unsigned char")]
        public byte uiColorMatrix;

        public bool bAspectRatioPresent;

        public ESampleAspectRatio eAspectRatio;

        [NativeTypeName("unsigned short")]
        public ushort sAspectRatioExtWidth;

        [NativeTypeName("unsigned short")]
        public ushort sAspectRatioExtHeight;
    }

    public enum EUsageType
    {
        CAMERA_VIDEO_REAL_TIME,
        SCREEN_CONTENT_REAL_TIME,
        CAMERA_VIDEO_NON_REAL_TIME,
        SCREEN_CONTENT_NON_REAL_TIME,
        INPUT_CONTENT_TYPE_ALL,
    }

    public enum ECOMPLEXITY_MODE
    {
        LOW_COMPLEXITY = 0,
        MEDIUM_COMPLEXITY,
        HIGH_COMPLEXITY,
    }

    public enum EParameterSetStrategy
    {
        CONSTANT_ID = 0,
        INCREASING_ID = 0x01,
        SPS_LISTING = 0x02,
        SPS_LISTING_AND_PPS_INCREASING = 0x03,
        SPS_PPS_LISTING = 0x06,
    }

    public partial struct TagEncParamBase
    {
        public EUsageType iUsageType;

        public int iPicWidth;

        public int iPicHeight;

        public int iTargetBitrate;

        public RC_MODES iRCMode;

        public float fMaxFrameRate;
    }

    public partial struct TagEncParamExt
    {
        public EUsageType iUsageType;

        public int iPicWidth;

        public int iPicHeight;

        public int iTargetBitrate;

        public RC_MODES iRCMode;

        public float fMaxFrameRate;

        public int iTemporalLayerNum;

        public int iSpatialLayerNum;

        [NativeTypeName("SSpatialLayerConfig [4]")]
        public _sSpatialLayers_e__FixedBuffer sSpatialLayers;

        public ECOMPLEXITY_MODE iComplexityMode;

        [NativeTypeName("unsigned int")]
        public uint uiIntraPeriod;

        public int iNumRefFrame;

        public EParameterSetStrategy eSpsPpsIdStrategy;

        public bool bPrefixNalAddingCtrl;

        public bool bEnableSSEI;

        public bool bSimulcastAVC;

        public int iPaddingFlag;

        public int iEntropyCodingModeFlag;

        public bool bEnableFrameSkip;

        public int iMaxBitrate;

        public int iMaxQp;

        public int iMinQp;

        [NativeTypeName("unsigned int")]
        public uint uiMaxNalSize;

        public bool bEnableLongTermReference;

        public int iLTRRefNum;

        [NativeTypeName("unsigned int")]
        public uint iLtrMarkPeriod;

        [NativeTypeName("unsigned short")]
        public ushort iMultipleThreadIdc;

        public bool bUseLoadBalancing;

        public int iLoopFilterDisableIdc;

        public int iLoopFilterAlphaC0Offset;

        public int iLoopFilterBetaOffset;

        public bool bEnableDenoise;

        public bool bEnableBackgroundDetection;

        public bool bEnableAdaptiveQuant;

        public bool bEnableFrameCroppingFlag;

        public bool bEnableSceneChangeDetect;

        public bool bIsLosslessLink;

        public partial struct _sSpatialLayers_e__FixedBuffer
        {
            public SSpatialLayerConfig e0;
            public SSpatialLayerConfig e1;
            public SSpatialLayerConfig e2;
            public SSpatialLayerConfig e3;

            public ref SSpatialLayerConfig this[int index]
            {
                get
                {
                    return ref AsSpan()[index];
                }
            }

            public Span<SSpatialLayerConfig> AsSpan() => MemoryMarshal.CreateSpan(ref e0, 4);
        }
    }

    public partial struct SVideoProperty
    {
        [NativeTypeName("unsigned int")]
        public uint size;

        public VIDEO_BITSTREAM_TYPE eVideoBsType;
    }

    public unsafe partial struct TagSVCDecodingParam
    {
        [NativeTypeName("char *")]
        public sbyte* pFileNameRestructed;

        [NativeTypeName("unsigned int")]
        public uint uiCpuLoad;

        [NativeTypeName("unsigned char")]
        public byte uiTargetDqLayer;

        public ERROR_CON_IDC eEcActiveIdc;

        public bool bParseOnly;

        public SVideoProperty sVideoProperty;
    }

    public unsafe partial struct SLayerBSInfo
    {
        [NativeTypeName("unsigned char")]
        public byte uiTemporalId;

        [NativeTypeName("unsigned char")]
        public byte uiSpatialId;

        [NativeTypeName("unsigned char")]
        public byte uiQualityId;

        public EVideoFrameType eFrameType;

        [NativeTypeName("unsigned char")]
        public byte uiLayerType;

        public int iSubSeqId;

        public int iNalCount;

        public int* pNalLengthInByte;

        [NativeTypeName("unsigned char *")]
        public byte* pBsBuf;
    }

    public partial struct SFrameBSInfo
    {
        public int iLayerNum;

        [NativeTypeName("SLayerBSInfo [128]")]
        public _sLayerInfo_e__FixedBuffer sLayerInfo;

        public EVideoFrameType eFrameType;

        public int iFrameSizeInBytes;

        [NativeTypeName("long long")]
        public long uiTimeStamp;

        public partial struct _sLayerInfo_e__FixedBuffer
        {
            public SLayerBSInfo e0;
            public SLayerBSInfo e1;
            public SLayerBSInfo e2;
            public SLayerBSInfo e3;
            public SLayerBSInfo e4;
            public SLayerBSInfo e5;
            public SLayerBSInfo e6;
            public SLayerBSInfo e7;
            public SLayerBSInfo e8;
            public SLayerBSInfo e9;
            public SLayerBSInfo e10;
            public SLayerBSInfo e11;
            public SLayerBSInfo e12;
            public SLayerBSInfo e13;
            public SLayerBSInfo e14;
            public SLayerBSInfo e15;
            public SLayerBSInfo e16;
            public SLayerBSInfo e17;
            public SLayerBSInfo e18;
            public SLayerBSInfo e19;
            public SLayerBSInfo e20;
            public SLayerBSInfo e21;
            public SLayerBSInfo e22;
            public SLayerBSInfo e23;
            public SLayerBSInfo e24;
            public SLayerBSInfo e25;
            public SLayerBSInfo e26;
            public SLayerBSInfo e27;
            public SLayerBSInfo e28;
            public SLayerBSInfo e29;
            public SLayerBSInfo e30;
            public SLayerBSInfo e31;
            public SLayerBSInfo e32;
            public SLayerBSInfo e33;
            public SLayerBSInfo e34;
            public SLayerBSInfo e35;
            public SLayerBSInfo e36;
            public SLayerBSInfo e37;
            public SLayerBSInfo e38;
            public SLayerBSInfo e39;
            public SLayerBSInfo e40;
            public SLayerBSInfo e41;
            public SLayerBSInfo e42;
            public SLayerBSInfo e43;
            public SLayerBSInfo e44;
            public SLayerBSInfo e45;
            public SLayerBSInfo e46;
            public SLayerBSInfo e47;
            public SLayerBSInfo e48;
            public SLayerBSInfo e49;
            public SLayerBSInfo e50;
            public SLayerBSInfo e51;
            public SLayerBSInfo e52;
            public SLayerBSInfo e53;
            public SLayerBSInfo e54;
            public SLayerBSInfo e55;
            public SLayerBSInfo e56;
            public SLayerBSInfo e57;
            public SLayerBSInfo e58;
            public SLayerBSInfo e59;
            public SLayerBSInfo e60;
            public SLayerBSInfo e61;
            public SLayerBSInfo e62;
            public SLayerBSInfo e63;
            public SLayerBSInfo e64;
            public SLayerBSInfo e65;
            public SLayerBSInfo e66;
            public SLayerBSInfo e67;
            public SLayerBSInfo e68;
            public SLayerBSInfo e69;
            public SLayerBSInfo e70;
            public SLayerBSInfo e71;
            public SLayerBSInfo e72;
            public SLayerBSInfo e73;
            public SLayerBSInfo e74;
            public SLayerBSInfo e75;
            public SLayerBSInfo e76;
            public SLayerBSInfo e77;
            public SLayerBSInfo e78;
            public SLayerBSInfo e79;
            public SLayerBSInfo e80;
            public SLayerBSInfo e81;
            public SLayerBSInfo e82;
            public SLayerBSInfo e83;
            public SLayerBSInfo e84;
            public SLayerBSInfo e85;
            public SLayerBSInfo e86;
            public SLayerBSInfo e87;
            public SLayerBSInfo e88;
            public SLayerBSInfo e89;
            public SLayerBSInfo e90;
            public SLayerBSInfo e91;
            public SLayerBSInfo e92;
            public SLayerBSInfo e93;
            public SLayerBSInfo e94;
            public SLayerBSInfo e95;
            public SLayerBSInfo e96;
            public SLayerBSInfo e97;
            public SLayerBSInfo e98;
            public SLayerBSInfo e99;
            public SLayerBSInfo e100;
            public SLayerBSInfo e101;
            public SLayerBSInfo e102;
            public SLayerBSInfo e103;
            public SLayerBSInfo e104;
            public SLayerBSInfo e105;
            public SLayerBSInfo e106;
            public SLayerBSInfo e107;
            public SLayerBSInfo e108;
            public SLayerBSInfo e109;
            public SLayerBSInfo e110;
            public SLayerBSInfo e111;
            public SLayerBSInfo e112;
            public SLayerBSInfo e113;
            public SLayerBSInfo e114;
            public SLayerBSInfo e115;
            public SLayerBSInfo e116;
            public SLayerBSInfo e117;
            public SLayerBSInfo e118;
            public SLayerBSInfo e119;
            public SLayerBSInfo e120;
            public SLayerBSInfo e121;
            public SLayerBSInfo e122;
            public SLayerBSInfo e123;
            public SLayerBSInfo e124;
            public SLayerBSInfo e125;
            public SLayerBSInfo e126;
            public SLayerBSInfo e127;

            public ref SLayerBSInfo this[int index]
            {
                get
                {
                    return ref AsSpan()[index];
                }
            }

            public Span<SLayerBSInfo> AsSpan() => MemoryMarshal.CreateSpan(ref e0, 128);
        }
    }

    public unsafe partial struct SSourcePicture
    {
        public EVideoFormatType iColorFormat;

        [NativeTypeName("int [4]")]
        public fixed int iStride[4];

        [NativeTypeName("unsigned char *[4]")]
        public _pData_e__FixedBuffer pData;

        public int iPicWidth;

        public int iPicHeight;

        [NativeTypeName("long long")]
        public long uiTimeStamp;

        public unsafe partial struct _pData_e__FixedBuffer
        {
            public byte* e0;
            public byte* e1;
            public byte* e2;
            public byte* e3;

            public ref byte* this[int index]
            {
                get
                {
                    fixed (byte** pThis = &e0)
                    {
                        return ref pThis[index];
                    }
                }
            }
        }
    }

    public partial struct TagBitrateInfo
    {
        public LAYER_NUM iLayer;

        public int iBitrate;
    }

    public unsafe partial struct TagDumpLayer
    {
        public int iLayer;

        [NativeTypeName("char *")]
        public sbyte* pFileName;
    }

    public partial struct TagProfileInfo
    {
        public int iLayer;

        public EProfileIdc uiProfileIdc;
    }

    public partial struct TagLevelInfo
    {
        public int iLayer;

        public ELevelIdc uiLevelIdc;
    }

    public partial struct TagDeliveryStatus
    {
        public bool bDeliveryFlag;

        public int iDropFrameType;

        public int iDropFrameSize;
    }

    public partial struct TagDecoderCapability
    {
        public int iProfileIdc;

        public int iProfileIop;

        public int iLevelIdc;

        public int iMaxMbps;

        public int iMaxFs;

        public int iMaxCpb;

        public int iMaxDpb;

        public int iMaxBr;

        public bool bRedPicCap;
    }

    public unsafe partial struct TagParserBsInfo
    {
        public int iNalNum;

        public int* pNalLenInByte;

        [NativeTypeName("unsigned char *")]
        public byte* pDstBuff;

        public int iSpsWidthInPixel;

        public int iSpsHeightInPixel;

        [NativeTypeName("unsigned long long")]
        public ulong uiInBsTimeStamp;

        [NativeTypeName("unsigned long long")]
        public ulong uiOutBsTimeStamp;
    }

    public partial struct TagVideoEncoderStatistics
    {
        [NativeTypeName("unsigned int")]
        public uint uiWidth;

        [NativeTypeName("unsigned int")]
        public uint uiHeight;

        public float fAverageFrameSpeedInMs;

        public float fAverageFrameRate;

        public float fLatestFrameRate;

        [NativeTypeName("unsigned int")]
        public uint uiBitRate;

        [NativeTypeName("unsigned int")]
        public uint uiAverageFrameQP;

        [NativeTypeName("unsigned int")]
        public uint uiInputFrameCount;

        [NativeTypeName("unsigned int")]
        public uint uiSkippedFrameCount;

        [NativeTypeName("unsigned int")]
        public uint uiResolutionChangeTimes;

        [NativeTypeName("unsigned int")]
        public uint uiIDRReqNum;

        [NativeTypeName("unsigned int")]
        public uint uiIDRSentNum;

        [NativeTypeName("unsigned int")]
        public uint uiLTRSentNum;

        [NativeTypeName("long long")]
        public long iStatisticsTs;

        [NativeTypeName("unsigned long")]
        public uint iTotalEncodedBytes;

        [NativeTypeName("unsigned long")]
        public uint iLastStatisticsBytes;

        [NativeTypeName("unsigned long")]
        public uint iLastStatisticsFrameCount;
    }

    public partial struct TagVideoDecoderStatistics
    {
        [NativeTypeName("unsigned int")]
        public uint uiWidth;

        [NativeTypeName("unsigned int")]
        public uint uiHeight;

        public float fAverageFrameSpeedInMs;

        public float fActualAverageFrameSpeedInMs;

        [NativeTypeName("unsigned int")]
        public uint uiDecodedFrameCount;

        [NativeTypeName("unsigned int")]
        public uint uiResolutionChangeTimes;

        [NativeTypeName("unsigned int")]
        public uint uiIDRCorrectNum;

        [NativeTypeName("unsigned int")]
        public uint uiAvgEcRatio;

        [NativeTypeName("unsigned int")]
        public uint uiAvgEcPropRatio;

        [NativeTypeName("unsigned int")]
        public uint uiEcIDRNum;

        [NativeTypeName("unsigned int")]
        public uint uiEcFrameNum;

        [NativeTypeName("unsigned int")]
        public uint uiIDRLostNum;

        [NativeTypeName("unsigned int")]
        public uint uiFreezingIDRNum;

        [NativeTypeName("unsigned int")]
        public uint uiFreezingNonIDRNum;

        public int iAvgLumaQp;

        public int iSpsReportErrorNum;

        public int iSubSpsReportErrorNum;

        public int iPpsReportErrorNum;

        public int iSpsNoExistNalNum;

        public int iSubSpsNoExistNalNum;

        public int iPpsNoExistNalNum;

        [NativeTypeName("unsigned int")]
        public uint uiProfile;

        [NativeTypeName("unsigned int")]
        public uint uiLevel;

        public int iCurrentActiveSpsId;

        public int iCurrentActivePpsId;

        [NativeTypeName("unsigned int")]
        public uint iStatisticsLogInterval;
    }

    public partial struct TagVuiSarInfo
    {
        [NativeTypeName("unsigned int")]
        public uint uiSarWidth;

        [NativeTypeName("unsigned int")]
        public uint uiSarHeight;

        public bool bOverscanAppropriateFlag;
    }
}
